basePath: /
definitions:
  domain.CreateTodoDTO:
    properties:
      description:
        type: string
      difficulty:
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      priority:
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      title:
        type: string
    type: object
  domain.ErrorResponse400:
    properties:
      error:
        example: Invalid request body
        type: string
    type: object
  domain.ErrorResponse404:
    properties:
      error:
        example: Todo not found
        type: string
    type: object
  domain.ErrorResponse500:
    properties:
      error:
        example: Internal server error
        type: string
    type: object
  domain.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      difficulty:
        description: 1:easy, 2:medium, 3:hard
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      priority:
        description: 1:low, 2:medium, 3:high
        enum:
        - 1
        - 2
        - 3
        example: 1
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  main.HealthCheckResponse:
    properties:
      message:
        example: OK
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: hamlert33@gmail.com
    name: wiwatsapon
  description: API user management Server by Fiber | Doc by Swagger.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: User API by Fiber and Swagger
  version: "1.0"
paths:
  /healthcheck:
    get:
      consumes:
      - '*/*'
      description: Get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.HealthCheckResponse'
      summary: Show the status of server.
      tags:
      - root
  /todos:
    get:
      consumes:
      - application/json
      description: Retrieve all todos from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Todo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse500'
      summary: Get all todos
      tags:
      - todo
    post:
      consumes:
      - application/json
      description: Use for create to do.
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTodoDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse400'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse500'
      summary: Create to do.
      tags:
      - todo
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo to the system
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Todo'
        "400":
          description: Todo not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse500'
      summary: Delete todo
      tags:
      - todo
    get:
      consumes:
      - application/json
      description: Retrieve todo by id from the system
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse400'
        "404":
          description: Todo not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse500'
      summary: Get todo by id
      tags:
      - todo
    put:
      consumes:
      - application/json
      description: Update todo to the system
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Todo'
        "404":
          description: Todo not found
          schema:
            $ref: '#/definitions/domain.ErrorResponse404'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse500'
      summary: Update todo
      tags:
      - todo
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
